import "../fonts/MiSans-Bold.otf";
import "../fonts/MiSans-Demibold.otf";
import "../fonts/MiSans-ExtraLight.otf";
import "../fonts/MiSans-Heavy.otf";
import "../fonts/MiSans-Light.otf";
import "../fonts/MiSans-Medium.otf";
import "../fonts/MiSans-Normal.otf";
import "../fonts/MiSans-Regular.otf";
import "../fonts/MiSans-Semibold.otf";
import "../fonts/MiSans-Thin.otf";
import { TitleBar } from "title-bar.slint";

export component CustomWindow inherits Window{
    no-frame: true;
    min-width: 200px;
    min-height: 200px;
    background: transparent;

    in property <brush> content-background: #fefefe;
    in property <length> border-radius: 4px;

    property <bool> drag-area-pressed: false;
    property <length> drag-area-down-x: 0;
    property <length> drag-area-down-y: 0;
    property <length> area-size: 8px;
    property <length> border-width: 2px;
    property <length> mouse-speed-x;
    property <length> mouse-speed-y;
    property <bool> move-x: false;
    property <bool> move-y: false;
    in-out property <bool> resize-w: false;
    in-out property <bool> resize-h: false;
    in-out property <brush> border-color: @linear-gradient(90deg,#0b84f0,#f00b0b);


    callback close();
    callback move(length,length);
    callback resize(length,length);

    function drag-area-move(offset: int,x: length,y: length) {
        root.mouse-speed-x = x - drag-area-down-x;
        root.mouse-speed-y = y - drag-area-down-y;
        move-x=false;
        move-y=false;
        // Move window 移动窗口
        if(offset == 0 ){
            move-x=true;
            move-y=true;
            // Top border 顶部边框
        }else if(offset == 1){
            resize(root.width,root.height - mouse-speed-y);
            if(resize-h){
                move-y=true;
            }
            // Right border 右侧边框
        }else if(offset == 2){
            resize(root.width + mouse-speed-x,root.height);
        
            // Bottom border 底部边框
        }else if(offset == 3){
            resize(root.width,root.height + mouse-speed-y);
        
            // Left border 左侧边框
        }else if(offset == 4){
            resize(root.width - mouse-speed-x,root.height);
            if(resize-w){
                move-x=true;
            }
            // Top-left corner 左上角
        }else if(offset == 5){
            resize(root.width - mouse-speed-x,root.height - mouse-speed-y);
            if(resize-w){
                move-x=true;
            }
            if(resize-h){
                move-y=true;
            }
            // Top-right corner 右上角
        }else if(offset == 6){
            resize(root.width + mouse-speed-x,root.height - mouse-speed-y);
            if(resize-h){
                move-y=true;
            }
            // Bottom-right corner 右下角
        }else if(offset == 7){
            resize(root.width + mouse-speed-x,root.height + mouse-speed-y);
        
            // Bottom-left corner 左下角
        }else if(offset == 8){
            resize(root.width - mouse-speed-x,root.height + mouse-speed-y);
            if(resize-w){
                move-x=true;
            }
        }
        if(move-x&&move-y){
            move(mouse-speed-x,mouse-speed-y);
        }else if(move-x){
            move(mouse-speed-x,0);
        }else if(move-y){
            move(0,mouse-speed-y);
        }
    }

    function drag-area-event(event: PointerEvent,x: length,y:length) {
        drag-area-pressed = event.kind == PointerEventKind.down;
        drag-area-down-x = x;
        drag-area-down-y = y;
    }

    win:=Rectangle {
        clip:true;
        background: border-color;
        VerticalLayout {
            TitleBar {
                border-color: border-color;
                title: root.title;
                border-radius: border-radius;
                TouchArea {
                    moved => {
                        self.mouse-cursor = MouseCursor.move;
                        drag-area-move(0, self.mouse-x, self.mouse-y);
                    }
                    pointer-event(event) => {
                        if(event.kind == PointerEventKind.up){
                            self.mouse-cursor = MouseCursor.default;
                        }
                        drag-area-event(event, self.mouse-x, self.mouse-y);
                    }
                }
                HorizontalLayout {
                    alignment: end;
                    padding-left: parent.padding-width;
                    padding-right: parent.padding-width;
                    padding-top: parent.padding-height;
                    padding-bottom: parent.padding-height;
                    Rectangle {
                        border-radius: border-radius;
                        width: 14px;
                        height: 14px;
                        background: touch.has-hover? touch.pressed? #ffffff9f : #ffffff7f : #ffffff3f;
                        touch := TouchArea {
                            clicked => { close() }
                        }
                        Text {
                            vertical-alignment: center;
                            color: #fefefe;
                            font-family: "MiSans";
                            font-size: 12px;
                            font-weight: 500;
                            text: "×";
                        }
                    }
                }
            }
            VerticalLayout {
                Rectangle {
                    clip: true;
                    border-radius: border-radius;
                    background: content-background;
                    @children
                }
                padding: win.border-width;
            }
        }
        padding: self.border-width;
        border-color: border-color;
        border-width: border-width;
        border-radius: border-radius;
    }

    // 上边框点击区域
    top-border-touch:= TouchArea{
        mouse-cursor: row-resize;
        width: 100%;
        height: root.area-size;
        x: 0;
        y: 0;
        moved => {
            drag-area-move(1, self.mouse-x, self.mouse-y);
        }
        pointer-event(event) => {
            drag-area-event(event, self.mouse-x, self.mouse-y);
        }
    }
    
    // 右边框点击区域
    right-border-touch:= TouchArea{
        mouse-cursor: col-resize;
        width: root.area-size;
        height: 100%;
        x: root.width - root.area-size;
        y: 0;
        moved => {
            drag-area-move(2, self.mouse-x, self.mouse-y);
        }
        pointer-event(event) => {
            drag-area-event(event, self.mouse-x, self.mouse-y);
        }
    }

    // 下边框点击区域
    bottom-border-touch:= TouchArea{
        mouse-cursor: row-resize;
        width: 100%;
        height: root.area-size;
        x: 0;
        y: root.height - root.area-size;
        moved => {
            drag-area-move(3, self.mouse-x, self.mouse-y);
        }
        pointer-event(event) => {
            drag-area-event(event, self.mouse-x, self.mouse-y);
        }
    }

    // 左边框点击区域
    left-border-touch:= TouchArea{
        mouse-cursor: col-resize;
        width: root.area-size;
        height: 100%;
        x: 0;
        y: 0;
        moved => {
            drag-area-move(4, self.mouse-x, self.mouse-y);
        }
        pointer-event(event) => {
            drag-area-event(event, self.mouse-x, self.mouse-y);
        }
    }

    // 左上角点击区域
    left-top-border-touch:= TouchArea{
        mouse-cursor: nw-resize;
        width: root.area-size;
        height: root.area-size;
        x: 0;
        y: 0;
        moved => {
            drag-area-move(5, self.mouse-x, self.mouse-y);
        }
        pointer-event(event) => {
            drag-area-event(event, self.mouse-x, self.mouse-y);
        }
    }
    // 右上角点击区域
    right-top-border-touch:= TouchArea{
        mouse-cursor: ne-resize;
        width: root.area-size;
        height: root.area-size;
        x: root.width - root.area-size;
        y: 0;
        moved => {
            drag-area-move(6, self.mouse-x, self.mouse-y);
        }
        pointer-event(event) => {
            drag-area-event(event, self.mouse-x, self.mouse-y);
        }
    }
    //右下角点击区域
    right-bottom-border-touch:= TouchArea{
        mouse-cursor: se-resize;
        width: root.area-size;
        height: root.area-size;
        x: root.width - root.area-size;
        y: root.height - root.area-size;
        moved => {
            drag-area-move(7, self.mouse-x, self.mouse-y);
        }
        pointer-event(event) => {
            drag-area-event(event, self.mouse-x, self.mouse-y);
        }
    }
    //左下角点击区域
    left-bottom-border-touch:= TouchArea{
        mouse-cursor: sw-resize;
        width: root.area-size;
        height: root.area-size;
        x: 0;
        y: root.height - root.area-size;
        moved => {
            drag-area-move(8, self.mouse-x, self.mouse-y);
        }
        pointer-event(event) => {
            drag-area-event(event, self.mouse-x, self.mouse-y);
        }
    }
}